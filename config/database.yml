# # MySQL. Versions 5.1.10 and up are supported.
# #
# # Install the MySQL driver
# #   gem install mysql2
# #
# # Ensure the MySQL gem is defined in your Gemfile
# #   gem 'mysql2'
# #
# # And be sure to use new-style password hashing:
# #   http://dev.mysql.com/doc/refman/5.7/en/old-client.html
# #
# default: &default
#   adapter: mysql2
#   encoding: utf8
#   pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>
#   username: root
#   password: root
#   socket: /var/run/mysqld/mysqld.sock

# development:
#   <<: *default
#   database: petapp_development

# # Warning: The database defined as "test" will be erased and
# # re-generated from your development database when you run "rake".
# # Do not set this db to the same as development or production.
# test:
#   <<: *default
#   database: petapp_test

# # As with config/secrets.yml, you never want to store sensitive information,
# # like your database password, in your source code. If your source code is
# # ever seen by anyone, they now have access to your database.
# #
# # Instead, provide the password as a unix environment variable when you boot
# # the app. Read http://guides.rubyonrails.org/configuring.html#configuring-a-database
# # for a full rundown on how to provide these environment variables in a
# # production deployment.
# #
# # On Heroku and other platform providers, you may have a full connection URL
# # available as an environment variable. For example:
# #
# #   DATABASE_URL="mysql2://myuser:mypass@localhost/somedatabase"
# #
# # You can use this database configuration with:
# #
# #   production:
# #     url: <%= ENV['DATABASE_URL'] %>
# #
# production:
#   <<: *default
#   database: petapp_production
#   username: petapp
#   password: <%= ENV['PETAPP_DATABASE_PASSWORD'] %>


# PostgreSQL. Versions 8.2 and up are supported.
#
# Install the pg driver:
#   gem install pg
# On OS X with Homebrew:
#   gem install pg -- --with-pg-config=/usr/local/bin/pg_config
# On OS X with MacPorts:
#   gem install pg -- --with-pg-config=/opt/local/lib/postgresql84/bin/pg_config
# On Windows:
#   gem install pg
#       Choose the win32 build.
#       Install PostgreSQL and put its /bin directory on your path.
#
# Configure Using Gemfile
# gem 'pg'
#
default: &default
  adapter: postgresql
  encoding: unicode
  # For details on connection pooling, see rails configuration guide
  # http://guides.rubyonrails.org/configuring.html#database-pooling
  pool: 5

development:
  adapter: postgresql
  host: localhost
  database: ewomendev
  encoding: utf8
  username: postgres
  password: postgres
  schema_search_path: "public,citext"

  # The specified database role being used to connect to postgres.
  # To create additional roles in postgres see `$ createuser --help`.
  # When left blank, postgres will use the default role. This is
  # the same name as the operating system user that initialized the database.
  #username: ewomen

  # The password associated with the postgres role (username).
  #password:

  # Connect on a TCP socket. Omitted by default since the client uses a
  # domain socket that doesn't need configuration. Windows does not have
  # domain sockets, so uncomment these lines.
  #host: localhost

  # The TCP port the server listens on. Defaults to 5432.